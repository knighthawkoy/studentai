{"ast":null,"code":"import * as React from 'react';\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(ref) {\n  let {\n    enabled = true,\n    formatter = (options, route) => {\n      var _ref;\n      return (_ref = options === null || options === void 0 ? void 0 : options.title) !== null && _ref !== void 0 ? _ref : route === null || route === void 0 ? void 0 : route.name;\n    }\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const navigation = ref.current;\n    if (navigation) {\n      const title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', e => {\n      const title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"names":["React","useDocumentTitle","ref","enabled","formatter","options","route","_ref","title","name","arguments","length","undefined","useEffect","navigation","current","getCurrentOptions","getCurrentRoute","document","addListener","e","data"],"sources":["/opt/projects/studentai/app/webapp/node_modules/@react-navigation/native/src/useDocumentTitle.tsx"],"sourcesContent":["import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n"],"mappings":"AAIA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CACtCC,GAA2D,EAK3D;EAAA,IAJA;IACEC,OAAO,GAAG,IAAI;IACdC,SAAS,GAAGA,CAACC,OAAO,EAAEC,KAAK;MAAA,IAAAC,IAAA;MAAA,QAAAA,IAAA,GAAKF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,KAAK,cAAAD,IAAA,cAAAA,IAAA,GAAID,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,IAAI;IAAA;EACzC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE5BV,KAAK,CAACa,SAAS,CAAC,MAAM;IACpB,IAAI,CAACV,OAAO,EAAE;MACZ;IACF;IAEA,MAAMW,UAAU,GAAGZ,GAAG,CAACa,OAAO;IAE9B,IAAID,UAAU,EAAE;MACd,MAAMN,KAAK,GAAGJ,SAAS,CACrBU,UAAU,CAACE,iBAAiB,EAAE,EAC9BF,UAAU,CAACG,eAAe,EAAE,CAC7B;MAEDC,QAAQ,CAACV,KAAK,GAAGA,KAAK;IACxB;IAEA,OAAOM,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,WAAW,CAAC,SAAS,EAAGC,CAAC,IAAK;MAC/C,MAAMZ,KAAK,GAAGJ,SAAS,CAACgB,CAAC,CAACC,IAAI,CAAChB,OAAO,EAAES,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,eAAe,EAAE,CAAC;MAEtEC,QAAQ,CAACV,KAAK,GAAGA,KAAK;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}